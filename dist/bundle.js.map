{"version":3,"sources":["webpack://innovation/./src/js/display/playerTable/displayHeader.js","webpack://innovation/./src/js/display/playerTable/displayAside.js","webpack://innovation/./src/js/display/playerTable/displayActiveZone.js","webpack://innovation/./src/js/display/playerTable/displayHand.js","webpack://innovation/./src/js/display/playerTable/displayPlayerTable.js","webpack://innovation/./src/js/utility/setHandControls.js","webpack://innovation/./src/js/components/GameField.js","webpack://innovation/./src/js/cards/getCard.js","webpack://innovation/./src/js/components/Player.js","webpack://innovation/./src/js/components/Game.js","webpack://innovation/./src/js/display/displayNewTurnModal.js","webpack://innovation/./src/js/display/displayNextTurnBtn.js","webpack://innovation/./src/js/cards/parseCards.js","webpack://innovation/./src/js/components/GameUI.js","webpack://innovation/./src/js/utility/setChat.js","webpack://innovation/./src/js/utility/shuffle.js","webpack://innovation/./src/js/utility/initHotSeatGame.js","webpack://innovation/./src/js/app.js","webpack://innovation/./src/js/utility/setAsideControls.js"],"names":["wrapper","headRowNames","hand","influence","leadership","resourcesNames","tree","tower","crown","bulb","factory","clock","player1","container","name","red","green","blue","purple","yellow","player2","player3","player4","initPlayerStats","id","player","this","document","createElement","classList","add","headRow","textContent","appendChild","forEach","e","i","Object","keys","iconContainer","activeZoneRow","recourcesRow","headerTable","changePlayerStats","playerId","length","activeStacks","cards","init","headerTitle","headerOverlay","append","getStyleBlock","getInfoBlock","getCurrentDeckBlock","getExtraCardsBlock","getLogBlock","ageDecksBlock","getAgeDecksBlock","leadershipCardsBlock","getLeadershipCardsBlock","specialCardsBlock","getSpecialCardsBlock","body","block","infoBlock","currentPlayerBlock","currentPlayerText","innerText","currentPlayerName","actionPointsBlock","actionPointsText","actionPointsValue","currentDeck","currentDeckTitle","currentDeckCards","hoverBtn","addEventListener","toggle","extraCards","specialCards","specialCardsTitle","specialCardsCards","hoverBtnSpecial","leadershipCards","leadershipCardsTitle","leadershipCardsCards","hoverBtnLeadership","logBlock","innerHTML","spreadBtn","setAttribute","firstLine","secondLine","thirdLine","btnLine","deck","style","backgroundImage","button","leadershipCard","specialCard","activeZoneTitle","cardsBlock","cardsBlockOverlay","stacksNames","stack","handTitle","controlsBlock","arrowTop","disabled","arrowBottom","header","aside","activeZone","wrapperMain","displayHeader","displayActiveZone","displayHand","displayAside","disableBtn","btnElement","enableBtn","remove","GameField","arrOfCardObjects","ageDecks","age1","age2","age3","age4","age5","age6","age7","age8","age9","age10","leadershipDeck","specialDeck","setDeckArrays","cardsObj","age","push","Error","frontSide","cardObj","divCard","background","cardImg","getCardHeader","getCardMain","getCardFooter","setObjByPosition","color","card","divHeader","posTopLeft","title","innovation","divMain","dogma","item","divDogma","dogmaType","icon","dogmaIcon","dogmaColor","dogmaEffect","divFooter","posBottomLeft","posBottomCenter","posBottomRight","agePos","querySelector","agePosition","resourses","res","resoursePosition","resourseType","resourseColor","Player","gameUI","playerName","game","currentAge","shift","ownedLeadership","domElement","cardsArray","currentStack","resourceName","lastTakenCard","cardElement","getCard","onclick","playCard","setTimeout","removeAttribute","stackName","splice","calculateResources","actionDone","Game","gameField","players","currentPlayer","turnPoints","setCurrentPlayer","modalBg","modalBlock","modalText","modalBtn","prepend","displayNewTurnModal","removeActiveDeck","setActiveDeck","renderHand","renderActiveZone","updateInfoTable","newTurnFunction","nextTurnBtn","disableHandEvents","newTurn","bind","ageDeckKey","takeCard","updateCurrentDeckBlock","cloneCurrentDeck","Array","from","querySelectorAll","setCurrentAge","pop","renderLastTakenCard","infoTable","actionPoints","prevDeckClone","cloneNode","parseCards","cardsJSON","resultArr","setOfCards","cardObject","assign","GameUI","getAgeDecks","getActiveStacks","getInfoTable","ageDecksElements","getElementsByClassName","ageDeck","activeStack","currentPlayerNameBlock","currentPlayerActionPoints","setChat","socket","io","messageContainer","messageForm","messageInput","userName","prompt","appendMessage","message","messageElement","autoScroll","scrollTop","scrollHeight","emit","on","data","nameOfUsers","values","el","preventDefault","value","shuffle","array","j","Math","floor","random","initHotSeatGame","arrOfCards","arguments","opacity","btnTop","btnBottom","html","cardsLineHeight","displayPlayerTable","documentElement","window","getComputedStyle","getPropertyValue","parseFloat","onwheel","animation","target","parentBlock","parentElement","childBlocks","children","map","line","flat","removeEventListener","child","className","split","setAsideControls"],"mappings":"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","file":"bundle.js","sourcesContent":["const displayHeader = {\n  wrapper: null,\n  headRowNames: [{ hand: ['fas', 'fa-hand-paper', 'yellow'] }, { influence: ['fas', 'fa-shield-alt', 'red'] }, { leadership: ['fas', 'fa-trophy', 'yellow'] }],\n  resourcesNames: [{ tree: ['fab', 'fa-pagelines', 'green'] }, { tower: ['fab', 'fa-fort-awesome', 'grey'] }, { crown: ['fas', 'fa-crown', 'yellow'] }, { bulb: ['fas', 'fa-lightbulb', 'purple'] }, { factory: ['fas', 'fa-industry', 'red'] }, { clock: ['far', 'fa-clock', 'blue'] }],\n  player1: {\n    container: null,\n    name: null,\n    hand: null,\n    influence: null,\n    leadership: null,\n    red: null,\n    green: null,\n    blue: null,\n    purple: null,\n    yellow: null,\n    tree: null,\n    tower: null,\n    crown: null,\n    bulb: null,\n    factory: null,\n    clock: null,\n  },\n  player2: {\n    container: null,\n    name: null,\n    hand: null,\n    influence: null,\n    leadership: null,\n    red: null,\n    green: null,\n    blue: null,\n    purple: null,\n    yellow: null,\n    tree: null,\n    tower: null,\n    crown: null,\n    bulb: null,\n    factory: null,\n    clock: null,\n  },\n  player3: {\n    container: null,\n    name: null,\n    hand: null,\n    influence: null,\n    leadership: null,\n    red: null,\n    green: null,\n    blue: null,\n    purple: null,\n    yellow: null,\n    tree: null,\n    tower: null,\n    crown: null,\n    bulb: null,\n    factory: null,\n    clock: null,\n  },\n  player4: {\n    container: null,\n    name: null,\n    hand: null,\n    influence: null,\n    leadership: null,\n    red: null,\n    green: null,\n    blue: null,\n    purple: null,\n    yellow: null,\n    tree: null,\n    tower: null,\n    crown: null,\n    bulb: null,\n    factory: null,\n    clock: null,\n  },\n\n  initPlayerStats(id) {\n    const player = `player${id}`;\n\n    this[player].container = document.createElement('div');\n    this[player].container.classList.add('player-container');\n\n    const headRow = document.createElement('div');\n    headRow.classList.add('head-row');\n    this[player].name = document.createElement('div');\n    this[player].name.classList.add('head-row__name');\n    this[player].name.textContent = `Player${id}`;\n    headRow.appendChild(this[player].name);\n\n    this.headRowNames.forEach((e) => {\n      const i = Object.keys(e)[0];\n      const container = document.createElement('div');\n      container.classList.add('cards-container');\n      const iconContainer = document.createElement('div');\n      iconContainer.classList.add(`${e[i][0]}`, `${e[i][1]}`, 'cards-container__icon', `card__icon-color--${e[i][2]}`);\n      container.appendChild(iconContainer);\n      this[player][i] = document.createElement('div');\n      this[player][i].classList.add('cards-container__counter');\n      this[player][i].textContent = 0;\n      container.appendChild(this[player][i]);\n      headRow.appendChild(container);\n    });\n\n    this[player].container.appendChild(headRow);\n\n    const activeZoneRow = document.createElement('div');\n    activeZoneRow.classList.add('active-zone-row');\n\n    this[player].red = document.createElement('div');\n    this[player].red.classList.add('active-zone-row__red');\n    this[player].red.textContent = 0;\n    activeZoneRow.appendChild(this[player].red);\n\n    this[player].green = document.createElement('div');\n    this[player].green.classList.add('active-zone-row__green');\n    this[player].green.textContent = 0;\n    activeZoneRow.appendChild(this[player].green);\n\n    this[player].blue = document.createElement('div');\n    this[player].blue.classList.add('active-zone-row__blue');\n    this[player].blue.textContent = 0;\n    activeZoneRow.appendChild(this[player].blue);\n\n    this[player].purple = document.createElement('div');\n    this[player].purple.classList.add('active-zone-row__purple');\n    this[player].purple.textContent = 0;\n    activeZoneRow.appendChild(this[player].purple);\n\n    this[player].yellow = document.createElement('div');\n    this[player].yellow.classList.add('active-zone-row__yellow');\n    this[player].yellow.textContent = 0;\n    activeZoneRow.appendChild(this[player].yellow);\n\n    this[player].container.appendChild(activeZoneRow);\n\n    const recourcesRow = document.createElement('div');\n    recourcesRow.classList.add('recources-row');\n    this.resourcesNames.forEach((e) => {\n      const i = Object.keys(e)[0];\n      // console.log(e[i][0]);\n      const container = document.createElement('div');\n      container.classList.add('recource-container');\n      const iconContainer = document.createElement('div');\n      iconContainer.classList.add(`${e[i][0]}`, `${e[i][1]}`, 'recource-container__icon', `card__icon-color--${e[i][2]}`);\n      container.appendChild(iconContainer);\n      this[player][i] = document.createElement('div');\n      this[player][i].classList.add('recource-container__counter');\n      this[player][i].textContent = 0;\n      container.appendChild(this[player][i]);\n      recourcesRow.appendChild(container);\n    });\n\n    this[player].container.appendChild(recourcesRow);\n    this.headerTable.appendChild(this[player].container);\n  },\n\n  changePlayerStats(player) {\n    const playerId = `player${player.id}`;\n\n    this[playerId].hand.textContent = player.hand.length;\n    this[playerId].red.textContent = player.activeStacks.red.cards.length;\n    this[playerId].green.textContent = player.activeStacks.green.cards.length;\n    this[playerId].blue.textContent = player.activeStacks.blue.cards.length;\n    this[playerId].purple.textContent = player.activeStacks.purple.cards.length;\n    this[playerId].yellow.textContent = player.activeStacks.yellow.cards.length;\n    this[playerId].tree.textContent = player.tree;\n    this[playerId].tower.textContent = player.tower;\n    this[playerId].crown.textContent = player.crown;\n    this[playerId].bulb.textContent = player.bulb;\n    this[playerId].factory.textContent = player.factory;\n    this[playerId].clock.textContent = player.clock;\n  },\n\n  init() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('header');\n\n    this.headerTitle = document.createElement('div');\n    this.headerTitle.classList.add('header__title');\n    this.wrapper.appendChild(this.headerTitle);\n\n    this.headerOverlay = document.createElement('div');\n    this.headerOverlay.classList.add('header__overlay');\n    this.wrapper.appendChild(this.headerOverlay);\n\n    this.headerTable = document.createElement('div');\n    this.headerTable.classList.add('header__table');\n    this.wrapper.appendChild(this.headerTable);\n\n    this.initPlayerStats(1);\n    this.initPlayerStats(2);\n    /* this.initPlayerStats(this.testPlayer3);\n    this.initPlayerStats(this.testPlayer4); */\n    return this.wrapper;\n  },\n};\n\nexport default displayHeader;\n\n/* 'tower', 'crown', 'bulb', 'factory', 'clock' */\n","const displayAside = {\r\n  wrapper: null,\r\n  init() {\r\n    // create aside wrapper\r\n    this.wrapper = document.createElement('div');\r\n    this.wrapper.classList.add('aside');\r\n\r\n    // append block for style aside backgroung and border\r\n    this.wrapper.append(this.getStyleBlock('overlay'));\r\n    this.wrapper.append(this.getStyleBlock('top'));\r\n    this.wrapper.append(this.getStyleBlock('center'));\r\n    this.wrapper.append(this.getStyleBlock('bottom'));\r\n\r\n    // append createand blocks to aside wrapper\r\n    this.wrapper.append(this.getInfoBlock());\r\n    this.wrapper.append(this.getCurrentDeckBlock());\r\n    this.wrapper.append(this.getExtraCardsBlock());\r\n    this.wrapper.append(this.getLogBlock());\r\n\r\n    // create hidden modals blocks\r\n    this.ageDecksBlock = this.getAgeDecksBlock();\r\n    this.leadershipCardsBlock = this.getLeadershipCardsBlock();\r\n    this.specialCardsBlock = this.getSpecialCardsBlock();\r\n\r\n    // append hidden modal blocks to body\r\n    document.body.append(this.ageDecksBlock);\r\n    document.body.append(this.leadershipCardsBlock);\r\n    document.body.append(this.specialCardsBlock);\r\n\r\n    return this.wrapper;\r\n  },\r\n\r\n  getStyleBlock(name) {\r\n    const block = document.createElement('div');\r\n    block.classList.add(`aside__${name}`);\r\n    return block;\r\n  },\r\n\r\n  getInfoBlock() {\r\n    // create info block\r\n    const infoBlock = document.createElement('div');\r\n    infoBlock.classList.add('info-table');\r\n\r\n    // create current player block\r\n    const currentPlayerBlock = document.createElement('div');\r\n    currentPlayerBlock.classList.add('info-table__player-block');\r\n\r\n    const currentPlayerText = document.createElement('div');\r\n    currentPlayerText.innerText = 'Ход игрока: ';\r\n\r\n    const currentPlayerName = document.createElement('div');\r\n    currentPlayerName.classList.add('info-table__player-name');\r\n\r\n    currentPlayerBlock.append(currentPlayerText);\r\n    currentPlayerBlock.append(currentPlayerName);\r\n\r\n    // create action points block\r\n    const actionPointsBlock = document.createElement('div');\r\n    actionPointsBlock.classList.add('info-table__action-points-block');\r\n\r\n    const actionPointsText = document.createElement('div');\r\n    actionPointsText.innerText = 'Осталось ОД: ';\r\n\r\n    const actionPointsValue = document.createElement('div');\r\n    actionPointsValue.classList.add('info-table__action-points');\r\n\r\n    actionPointsBlock.append(actionPointsText);\r\n    actionPointsBlock.append(actionPointsValue);\r\n\r\n    // append created blocks to info block\r\n    infoBlock.append(currentPlayerBlock);\r\n    infoBlock.append(actionPointsBlock);\r\n\r\n    return infoBlock;\r\n  },\r\n\r\n  getCurrentDeckBlock() {\r\n    // create current deck block\r\n    const currentDeck = document.createElement('div');\r\n    currentDeck.classList.add('current-deck');\r\n\r\n    const currentDeckTitle = document.createElement('div');\r\n    currentDeckTitle.classList.add('current-deck__title');\r\n    currentDeckTitle.innerText = 'Взять карту';\r\n\r\n    const currentDeckCards = document.createElement('div');\r\n    currentDeckCards.classList.add('current-deck__cards');\r\n\r\n    // create hover button element\r\n    const hoverBtn = document.createElement('button');\r\n    hoverBtn.classList.add('hover-btn');\r\n    hoverBtn.innerText = 'Показать все';\r\n    hoverBtn.addEventListener('click', () => {\r\n      this.ageDecksBlock.classList.toggle('age-decks--hidden');\r\n    });\r\n\r\n    // append button to deck block\r\n    currentDeckCards.append(hoverBtn);\r\n\r\n    // append title and cards blocks to current deck block\r\n    currentDeck.append(currentDeckTitle);\r\n    currentDeck.append(currentDeckCards);\r\n\r\n    return currentDeck;\r\n  },\r\n\r\n  getExtraCardsBlock() {\r\n    // create extra cards block\r\n    const extraCards = document.createElement('div');\r\n    extraCards.classList.add('extra-cards');\r\n\r\n    // create special cards block\r\n    const specialCards = document.createElement('div');\r\n    specialCards.classList.add('extra-cards__special-block');\r\n\r\n    const specialCardsTitle = document.createElement('div');\r\n    specialCardsTitle.classList.add('extra-cards__special-title');\r\n    specialCardsTitle.innerText = 'Специальные';\r\n\r\n    const specialCardsCards = document.createElement('div');\r\n    specialCardsCards.classList.add('extra-cards__special-cards');\r\n\r\n    // create hover button for special cards block\r\n    const hoverBtnSpecial = document.createElement('button');\r\n    hoverBtnSpecial.classList.add('hover-btn');\r\n    hoverBtnSpecial.innerText = 'Показать все';\r\n    hoverBtnSpecial.addEventListener('click', () => {\r\n      this.specialCardsBlock.classList.toggle('special-cards--hidden');\r\n    });\r\n    specialCardsCards.append(hoverBtnSpecial);\r\n\r\n    // append title and cards to special cards block\r\n    specialCards.append(specialCardsTitle);\r\n    specialCards.append(specialCardsCards);\r\n\r\n    // create leadership cards block\r\n    const leadershipCards = document.createElement('div');\r\n    leadershipCards.classList.add('extra-cards__leadership-block');\r\n\r\n    const leadershipCardsTitle = document.createElement('div');\r\n    leadershipCardsTitle.classList.add('extra-cards__leadership-title');\r\n    leadershipCardsTitle.innerText = 'Лидерство';\r\n\r\n    const leadershipCardsCards = document.createElement('div');\r\n    leadershipCardsCards.classList.add('extra-cards__leadership-cards');\r\n\r\n    // create hover button for leadership cards block\r\n    const hoverBtnLeadership = document.createElement('button');\r\n    hoverBtnLeadership.classList.add('hover-btn');\r\n    hoverBtnLeadership.innerText = 'Показать все';\r\n    hoverBtnLeadership.addEventListener('click', () => {\r\n      this.leadershipCardsBlock.classList.toggle('leadership-cards--hidden');\r\n    });\r\n    leadershipCardsCards.append(hoverBtnLeadership);\r\n\r\n    // append title and cards to leadership cards block\r\n    leadershipCards.append(leadershipCardsTitle);\r\n    leadershipCards.append(leadershipCardsCards);\r\n\r\n    // apend special cards and leadership blocks to extra cards block\r\n    extraCards.append(specialCards);\r\n    extraCards.append(leadershipCards);\r\n\r\n    return extraCards;\r\n  },\r\n\r\n  getLogBlock() {\r\n    // create log block\r\n    const logBlock = document.createElement('div');\r\n    logBlock.classList.add('chat-log');\r\n\r\n    // chat tab\r\n    logBlock.innerHTML = `<div class=\"chat-log__tab\">\r\n      <input type=\"radio\" id=\"chat-block\" name=\"tab-group\" checked>\r\n      <label for=\"chat-block\" class=\"chat-log__tab-title\">Чат</label> \r\n      <section class=\"chat-log__tab-content chat-block\">\r\n      </section> \r\n    </div>`;\r\n\r\n    // log tab\r\n    logBlock.innerHTML += `<div class=\"chat-log__tab\">\r\n      <input type=\"radio\" id=\"log-block\" name=\"tab-group\">\r\n      <label for=\"log-block\" class=\"chat-log__tab-title\">Лог</label> \r\n      <section class=\"chat-log__tab-content log-block\">\r\n      </section> \r\n    </div>`;\r\n\r\n    // input\r\n    logBlock.innerHTML += `<form class=\"chat-log__form\" id=\"input-form\">\r\n      <input class=\"chat-log__input\">\r\n      <button class=\"chat-log__btn\" type=\"submit\" form=\"input-form\">Отправить</button>\r\n    </form>`;\r\n\r\n    // spread button\r\n    const spreadBtn = document.createElement('div');\r\n    spreadBtn.classList.add('chat-log__spread');\r\n    logBlock.append(spreadBtn);\r\n\r\n    spreadBtn.addEventListener('click', () => {\r\n      logBlock.classList.toggle('chat-log--full-screen');\r\n      spreadBtn.classList.toggle('chat-log__spread--open');\r\n    });\r\n\r\n    return logBlock;\r\n  },\r\n\r\n  getAgeDecksBlock() {\r\n    // create age decks modal block\r\n    const agesNumber = 10;\r\n    const ageDecksBlock = document.createElement('div');\r\n    ageDecksBlock.classList.add('age-decks');\r\n    ageDecksBlock.classList.add('age-decks--hidden');\r\n\r\n    // Animation classes and attributes for modal block here\r\n    ageDecksBlock.classList.add('xyz-in');\r\n    ageDecksBlock.setAttribute('xyz', 'fade-100% duration-6');\r\n\r\n    // create blocks - lines of cards\r\n    const firstLine = document.createElement('div');\r\n    firstLine.classList.add('age-decks__first-line');\r\n\r\n    const secondLine = document.createElement('div');\r\n    secondLine.classList.add('age-decks__second-line');\r\n\r\n    const thirdLine = document.createElement('div');\r\n    thirdLine.classList.add('age-decks__third-line');\r\n\r\n    const btnLine = document.createElement('div');\r\n    btnLine.classList.add('age-decks__btn-line');\r\n\r\n    // create age decks\r\n    for (let i = 0; i < agesNumber; i += 1) {\r\n      const deck = document.createElement('div');\r\n      deck.classList.add('age-deck');\r\n      deck.id = `age${i + 1}`; // id age1-10 for each deck\r\n      deck.innerText = `${i + 1} Age`; // TODO remove later\r\n      deck.style.backgroundImage = 'url(./assets/img/cards-bg/age-01.jpg)'; //! use `` age-0${i+1} later\r\n\r\n      deck.addEventListener('click', () => this.ageDecksBlock.classList.toggle('age-decks--hidden'));\r\n\r\n      // Animation classes and attributes for cards here\r\n      deck.classList.add('xyz-in');\r\n      deck.setAttribute('xyz', 'flip-left-25% rotate-right-25% up-5 duration-6');\r\n\r\n      if (i < 4) {\r\n        firstLine.append(deck);\r\n      } else if (i < 7) {\r\n        secondLine.append(deck);\r\n      } else if (i < 10) {\r\n        thirdLine.append(deck);\r\n      }\r\n      if (i === 9) {\r\n        // create close button\r\n        const button = document.createElement('button');\r\n        button.classList.add('close-modal-btn');\r\n        button.innerText = 'Закрыть';\r\n        btnLine.append(button);\r\n      }\r\n    }\r\n\r\n    ageDecksBlock.append(firstLine);\r\n    ageDecksBlock.append(secondLine);\r\n    ageDecksBlock.append(thirdLine);\r\n    ageDecksBlock.append(btnLine);\r\n\r\n    return ageDecksBlock;\r\n  },\r\n\r\n  getLeadershipCardsBlock() {\r\n    // create leadership decks modal block\r\n    const leadershipCardsBlock = document.createElement('div');\r\n    leadershipCardsBlock.classList.add('leadership-cards');\r\n    leadershipCardsBlock.classList.add('leadership-cards--hidden');\r\n\r\n    // Animation classes and attributes for modal block here\r\n    leadershipCardsBlock.classList.add('xyz-in');\r\n    leadershipCardsBlock.setAttribute('xyz', 'fade-100% duration-6');\r\n\r\n    // create blocks - lines of cards\r\n    const firstLine = document.createElement('div');\r\n    firstLine.classList.add('leadership-cards__first-line');\r\n\r\n    const secondLine = document.createElement('div');\r\n    secondLine.classList.add('leadership-cards__second-line');\r\n\r\n    const btnLine = document.createElement('div');\r\n    btnLine.classList.add('leadership-cards__btn-line');\r\n\r\n    // create leadership cards\r\n    const numOfLeadershipCards = 10;\r\n    for (let i = 0; i < numOfLeadershipCards; i += 1) {\r\n      const leadershipCard = document.createElement('div');\r\n      leadershipCard.classList.add('leadership-cards__card');\r\n      leadershipCard.innerText = `${i + 1}`;\r\n\r\n      // Animation classes and attributes for cards here\r\n      leadershipCard.classList.add('xyz-in');\r\n      leadershipCard.setAttribute('xyz', 'flip-left-25% rotate-right-25% up-5 duration-6');\r\n\r\n      if (i < 5) firstLine.append(leadershipCard);\r\n      else if (i < 10) secondLine.append(leadershipCard);\r\n\r\n      if (i === 9) {\r\n        // create close button\r\n        const button = document.createElement('button');\r\n        button.classList.add('close-modal-btn');\r\n        button.innerText = 'Закрыть';\r\n        btnLine.append(button);\r\n      }\r\n    }\r\n\r\n    leadershipCardsBlock.append(firstLine);\r\n    leadershipCardsBlock.append(secondLine);\r\n    leadershipCardsBlock.append(btnLine);\r\n\r\n    return leadershipCardsBlock;\r\n  },\r\n\r\n  getSpecialCardsBlock() {\r\n    // create special cards modal block\r\n    const specialCardsBlock = document.createElement('div');\r\n    specialCardsBlock.classList.add('special-cards');\r\n    specialCardsBlock.classList.add('special-cards--hidden');\r\n\r\n    // Animation classes and attributes for modal block here\r\n    specialCardsBlock.classList.add('xyz-in');\r\n    specialCardsBlock.setAttribute('xyz', 'fade-100% duration-6');\r\n\r\n    // create blocks - lines of cards\r\n    const firstLine = document.createElement('div');\r\n    firstLine.classList.add('special-cards__first-line');\r\n\r\n    const secondLine = document.createElement('div');\r\n    secondLine.classList.add('special-cards__second-line');\r\n\r\n    const btnLine = document.createElement('div');\r\n    btnLine.classList.add('special-cards__btn-line');\r\n\r\n    // create special cards\r\n    const numOfSpecialCards = 5;\r\n    for (let i = 0; i < numOfSpecialCards; i += 1) {\r\n      const specialCard = document.createElement('div');\r\n      specialCard.classList.add('special-cards__card');\r\n\r\n      // Animation classes and attributes for cards here\r\n      specialCard.classList.add('xyz-in');\r\n      specialCard.setAttribute('xyz', 'flip-left-25% rotate-right-25% up-5 duration-6');\r\n\r\n      if (i < 3) firstLine.append(specialCard);\r\n      else if (i < 5) secondLine.append(specialCard);\r\n\r\n      // create close button\r\n      if (i === 4) {\r\n        const button = document.createElement('button');\r\n        button.classList.add('close-modal-btn');\r\n        button.innerText = 'Закрыть';\r\n        btnLine.append(button);\r\n      }\r\n    }\r\n\r\n    specialCardsBlock.append(firstLine);\r\n    specialCardsBlock.append(secondLine);\r\n    specialCardsBlock.append(btnLine);\r\n\r\n    return specialCardsBlock;\r\n  },\r\n};\r\n\r\nexport default displayAside;\r\n","const displayActiveZone = {\n  wrapper: null,\n  init() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('active-zone');\n\n    this.activeZoneTitle = document.createElement('div');\n    this.activeZoneTitle.classList.add('active-zone__title');\n\n    this.cardsBlock = document.createElement('div');\n    this.cardsBlock.classList.add('active-zone__cards');\n\n    this.cardsBlockOverlay = document.createElement('div');\n    this.cardsBlockOverlay.classList.add('active-zone__overlay');\n\n    // create players active stacks\n    // !Stack names are the color fields of cards object\n    const stacksNames = ['blue', 'red', 'green', 'purple', 'yellow'];\n    for (let i = 0; i < stacksNames.length; i += 1) {\n      const stack = document.createElement('div');\n      stack.classList.add('active-zone__stack');\n      stack.id = stacksNames[i]; // id stackName for each stack\n      this.cardsBlock.append(stack);\n    }\n\n    this.wrapper.append(this.activeZoneTitle);\n    this.wrapper.append(this.cardsBlockOverlay);\n    this.wrapper.append(this.cardsBlock);\n    return this.wrapper;\n  },\n};\n\nexport default displayActiveZone;\n","const displayHand = {\n  init() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('hand');\n\n    this.handTitle = document.createElement('div');\n    this.handTitle.classList.add('hand__title');\n\n    this.cardsBlock = document.createElement('div');\n    this.cardsBlock.classList.add('hand__cards');\n\n    this.cardsBlockOverlay = document.createElement('div');\n    this.cardsBlockOverlay.classList.add('hand__overlay');\n\n    this.controlsBlock = document.createElement('div');\n    this.controlsBlock.classList.add('hand__controls');\n\n    // disabled by default\n    this.arrowTop = document.createElement('button');\n    this.arrowTop.classList.add('hand__btn--top', 'hand__btn');\n    this.arrowTop.classList.add('hand__btn--disabled');\n    this.arrowTop.disabled = true;\n    this.arrowTop.innerHTML = /* html */ `\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n      xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n      x=\"0px\" y=\"0px\" width=\"50px\" height=\"50px\" viewBox=\"0 0 230 213.7\" enable-background=\"new 0 0 230 213.7\"\n      xml:space=\"preserve\">\n\n      <polygon class='hand__controls-svg--triangle' id=\"XMLID_18_\" fill=\"none\" stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"\n      73.5,62.5 148.5,105.8 73.5,149.1 \"/>\n\n      <circle class='hand__controls-svg--circle' id=\"XMLID_17_\" fill=\"none\"  stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\"  stroke-miterlimit=\"10\" cx=\"106.8\" cy=\"106.8\" r=\"103.3\"/>\n    </svg>\n    `;\n\n    // disabled by default\n    this.arrowBottom = document.createElement('button');\n    this.arrowBottom.classList.add('hand__btn--bottom', 'hand__btn');\n    this.arrowBottom.classList.add('hand__btn--disabled');\n    this.arrowBottom.disabled = true;\n    this.arrowBottom.innerHTML = /* html */ `\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n      xmlns:a=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n      x=\"0px\" y=\"0px\" width=\"50px\" height=\"50px\" viewBox=\"0 0 230 213.7\" enable-background=\"new 0 0 230 213.7\"\n      xml:space=\"preserve\">\n\n      <polygon class='hand__controls-svg--triangle' id=\"XMLID_18_\" fill=\"none\" stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"\n      73.5,62.5 148.5,105.8 73.5,149.1 \"/>\n\n      <circle class='hand__controls-svg--circle' id=\"XMLID_17_\" fill=\"none\"  stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\"  stroke-miterlimit=\"10\" cx=\"106.8\" cy=\"106.8\" r=\"103.3\"/>\n    </svg>\n    `;\n\n    this.controlsBlock.append(this.arrowTop);\n    this.controlsBlock.append(this.arrowBottom);\n\n    this.wrapper.append(this.handTitle);\n    this.wrapper.append(this.cardsBlockOverlay);\n    this.wrapper.append(this.cardsBlock);\n    this.wrapper.append(this.controlsBlock);\n    return this.wrapper;\n  },\n};\n\nexport default displayHand;\n","import displayHeader from './displayHeader';\nimport displayAside from './displayAside';\nimport displayActiveZone from './displayActiveZone';\nimport displayHand from './displayHand';\n\nconst displayPlayerTable = {\n  wrapper: null,\n  header: null,\n  aside: null,\n  activeZone: null,\n  hand: null,\n  init() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('wrapper');\n\n    this.wrapperMain = document.createElement('div');\n    this.wrapperMain.classList.add('wrapper__main');\n\n    this.header = displayHeader.init();\n    this.wrapperMain.appendChild(this.header);\n\n    this.activeZone = displayActiveZone.init();\n    this.wrapperMain.appendChild(this.activeZone);\n\n    this.hand = displayHand.init();\n    this.wrapperMain.appendChild(this.hand);\n\n    this.aside = displayAside.init();\n\n    this.wrapper.appendChild(this.wrapperMain);\n    this.wrapper.appendChild(this.aside);\n\n    return this.wrapper;\n  },\n\n};\n\nexport default displayPlayerTable;\n","// function which disable passed dom element button\r\nfunction disableBtn(btnElement) {\r\n  btnElement.disabled = true;\r\n  btnElement.classList.add('hand__btn--disabled');\r\n}\r\n\r\n// function which enable passed dom element button\r\nfunction enableBtn(btnElement) {\r\n  btnElement.disabled = false;\r\n  btnElement.classList.remove('hand__btn--disabled');\r\n}\r\n\r\nexport default function setGameControls() {\r\n  // get needed dom elements\r\n  const btnTop = document.querySelector('.hand__btn--top');\r\n  const btnBottom = document.querySelector('.hand__btn--bottom');\r\n  const hand = document.querySelector('.hand__cards');\r\n\r\n  // const height of one line of cards (current = 200px card + 70px margins/decoration)\r\n  // dinamically calculated depends on html font-size property\r\n  const html = document.documentElement;\r\n  const style = window.getComputedStyle(html, null).getPropertyValue('font-size');\r\n  const fontSize = parseFloat(style);\r\n\r\n  const cardsLineHeight = fontSize * 27;\r\n  // const timeout used because time needed for scroll animation before values updated\r\n  const timeoutTime = 350;\r\n\r\n  // disable scrolling in hand block\r\n  hand.onwheel = function disableScroll() { return false; };\r\n\r\n  // event activated on each inserted card\r\n  hand.addEventListener('DOMNodeInserted', () => {\r\n    // scroll to inserted card (or do nothing)\r\n    hand.scrollTop = hand.scrollHeight - cardsLineHeight;\r\n    disableBtn(btnBottom);\r\n    // if scrolled to second+ line of cards\r\n    if (hand.scrollHeight > cardsLineHeight) {\r\n      enableBtn(btnTop);\r\n    }\r\n  });\r\n\r\n  // event activated on each removed card\r\n  hand.addEventListener('DOMNodeRemoved', () => {\r\n    setTimeout(() => {\r\n      // only one line of card left - disable both buttons\r\n      if (hand.scrollHeight === cardsLineHeight) {\r\n        disableBtn(btnBottom);\r\n        disableBtn(btnTop);\r\n      // if point of view is on last line\r\n      //! cardsLineHeight * 2 because at different resolutions height in px may differ a bit\r\n      } else if (hand.scrollHeight - hand.scrollTop < cardsLineHeight * 2) {\r\n        disableBtn(btnBottom);\r\n      }\r\n    }, timeoutTime);\r\n  });\r\n\r\n  // event on click at top button\r\n  btnTop.addEventListener('click', () => {\r\n    // block multiple clicks faster then timeoutTime value\r\n    btnTop.disabled = true;\r\n\r\n    // scroll up one line\r\n    hand.scrollTop -= cardsLineHeight;\r\n\r\n    // disable/enable buttons depends on scroll position\r\n    // !important: dont use else here, need 2 separate if blocks\r\n    setTimeout(() => {\r\n      // if point of view at first line\r\n      if (hand.scrollTop === 0) {\r\n        disableBtn(btnTop);\r\n        enableBtn(btnBottom);\r\n      }\r\n      // if point of view not at first line\r\n      if (hand.scrollTop !== 0) {\r\n        enableBtn(btnBottom);\r\n        // remove disabled attribute added for blocking multiple clicks\r\n        btnTop.disabled = false;\r\n      }\r\n    }, timeoutTime);\r\n  });\r\n\r\n  // event on click at botom button\r\n  btnBottom.addEventListener('click', () => {\r\n    // block multiple clicks faster then timeoutTime value\r\n    btnBottom.disabled = true;\r\n\r\n    // scroll down on one line\r\n    hand.scrollTop += cardsLineHeight;\r\n\r\n    // disable/enable buttons depends on scroll position\r\n    setTimeout(() => {\r\n      // if point of view isnt on first line\r\n      if (hand.scrollTop !== 0) {\r\n        enableBtn(btnTop);\r\n        // remove disabled attribute added for blocking multiple clicks\r\n        btnBottom.disabled = false;\r\n      }\r\n      // if point of view on last line\r\n      //! cardsLineHeight * 2 because at different resolutions height in px may differ a bit\r\n      if (hand.scrollHeight - hand.scrollTop < cardsLineHeight * 2 && hand.scrollTop !== 0) {\r\n        disableBtn(btnBottom);\r\n      }\r\n    }, timeoutTime);\r\n  });\r\n}\r\n","/*\r\n* take cards objects and sort them to separate decks\r\n* store all cards avaible for all players (ages/leadership/special)\r\n* store cards as objects\r\n* this object passed as argument to Game constructor\r\n*/\r\nexport default class GameField {\r\n  constructor(arrOfCardObjects) {\r\n    // create empty decks for each age\r\n    this.ageDecks = {\r\n      age1: [],\r\n      age2: [],\r\n      age3: [],\r\n      age4: [],\r\n      age5: [],\r\n      age6: [],\r\n      age7: [],\r\n      age8: [],\r\n      age9: [],\r\n      age10: [],\r\n    };\r\n\r\n    // TODO leadership later\r\n    // create empty leadership deck\r\n    this.leadershipDeck = [];\r\n    // TODO special deck later\r\n    // create empty special deck\r\n    this.specialDeck = [];\r\n\r\n    // fill age decks with card objects\r\n    this.setDeckArrays(arrOfCardObjects);\r\n  }\r\n\r\n  // TODO add shuffle later\r\n  // fill deck arays depends on card age field\r\n  setDeckArrays(cardsObj) {\r\n    cardsObj.forEach((e) => {\r\n      switch (+e.age) {\r\n        case 1:\r\n          this.ageDecks.age1.push(e);\r\n          break;\r\n        case 2:\r\n          this.ageDecks.age2.push(e);\r\n          break;\r\n        case 3:\r\n          this.ageDecks.age3.push(e);\r\n          break;\r\n        case 4:\r\n          this.ageDecks.age4.push(e);\r\n          break;\r\n        case 5:\r\n          this.ageDecks.age5.push(e);\r\n          break;\r\n        case 6:\r\n          this.ageDecks.age6.push(e);\r\n          break;\r\n        case 7:\r\n          this.ageDecks.age7.push(e);\r\n          break;\r\n        case 8:\r\n          this.ageDecks.age8.push(e);\r\n          break;\r\n        case 9:\r\n          this.ageDecks.age9.push(e);\r\n          break;\r\n        case 10:\r\n          this.ageDecks.age10.push(e);\r\n          break;\r\n        default:\r\n          throw new Error(`Wrong number on age field in ${e}`);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// take card object and return builded card DOM element\r\nconst getCard = {\r\n  // get playing card\r\n  frontSide(cardObj) {\r\n    const divCard = document.createElement('div');\r\n    divCard.classList.add('card');\r\n    divCard.style.background = `url(\"${cardObj.cardImg}\")`;\r\n\r\n    divCard.appendChild(this.getCardHeader(cardObj));\r\n    divCard.appendChild(this.getCardMain(cardObj));\r\n    divCard.appendChild(this.getCardFooter());\r\n    this.setObjByPosition(divCard, cardObj, cardObj.age, cardObj.color);\r\n\r\n    return divCard;\r\n  },\r\n\r\n  // get card header\r\n  getCardHeader(card) {\r\n    const divHeader = document.createElement('div');\r\n    divHeader.classList.add('card__card-header', `card__color--${card.color}`);\r\n\r\n    const posTopLeft = document.createElement('div');\r\n    posTopLeft.classList.add('card__topLeft');\r\n\r\n    const title = document.createElement('div');\r\n    title.classList.add('card-header__title');\r\n    title.textContent = card.innovation;\r\n\r\n    divHeader.appendChild(posTopLeft);\r\n    divHeader.appendChild(title);\r\n\r\n    return divHeader;\r\n  },\r\n\r\n  // get card body\r\n  getCardMain(card) {\r\n    const divMain = document.createElement('div');\r\n    divMain.classList.add('card__card-main', `card__color--${card.color}-transparent`);\r\n\r\n    card.dogma.forEach((item) => {\r\n      const divDogma = document.createElement('div');\r\n      divDogma.classList.add('card__dogma');\r\n      divDogma.setAttribute('data-dogmatype', item.dogmaType);\r\n\r\n      const icon = document.createElement('i');\r\n      icon.classList.add(item.dogmaIcon[0], item.dogmaIcon[1], 'card__icon', `card__icon-color--${item.dogmaColor}`);\r\n      divDogma.appendChild(icon);\r\n\r\n      const dogma = document.createElement('span');\r\n      dogma.classList.add('dogma__effect');\r\n      dogma.innerHTML = item.dogmaEffect;\r\n      divDogma.appendChild(dogma);\r\n\r\n      divMain.appendChild(divDogma);\r\n    });\r\n\r\n    return divMain;\r\n  },\r\n\r\n  // get card footer\r\n  getCardFooter() {\r\n    const divFooter = document.createElement('div');\r\n    divFooter.classList.add('card__card-footer');\r\n\r\n    const posBottomLeft = document.createElement('div');\r\n    posBottomLeft.classList.add('card__bottomLeft');\r\n    divFooter.appendChild(posBottomLeft);\r\n\r\n    const posBottomCenter = document.createElement('div');\r\n    posBottomCenter.classList.add('card__bottomCenter');\r\n    divFooter.appendChild(posBottomCenter);\r\n\r\n    const posBottomRight = document.createElement('div');\r\n    posBottomRight.classList.add('card__bottomRight');\r\n    divFooter.appendChild(posBottomRight);\r\n\r\n    return divFooter;\r\n  },\r\n\r\n  // place age number and resourses by card position\r\n  setObjByPosition(divCard, card) {\r\n    const agePos = divCard.querySelector(`.card__${card.agePosition}`);\r\n    agePos.classList.add(`card__color--${card.color}`, 'card__age--border');\r\n    agePos.textContent = card.age;\r\n\r\n    card.resourses.forEach((res) => {\r\n      const pos = divCard.querySelector(`.card__${res.resoursePosition}`);\r\n      pos.classList.add(`${res.resourseType[0]}`, `${res.resourseType[1]}`,\r\n        `card__icon-color--${res.resourseColor}`, `card__icon-border--${card.color}`);\r\n    });\r\n  },\r\n};\r\n\r\nexport default getCard;\r\n","import getCard from '../cards/getCard';\r\nimport header from '../display/playerTable/displayHeader';\r\n\r\n/*\r\n* store all player cards objects (hand/table/lead/influence)\r\n* this obj passed as argument to Game constructor\r\n*/\r\nexport default class Player {\r\n  constructor(gameUI, playerName, id) {\r\n    // store passed values\r\n    this.name = playerName;\r\n    this.id = id;\r\n    this.gameUI = gameUI;\r\n\r\n    // set default values\r\n    this.game = null; //! this field will be set at game object initialization\r\n    this.currentAge = 1;\r\n    this.hand = [];\r\n\r\n    //! Names of stacks are color field in card objects\r\n    this.activeStacks = {\r\n      blue: {\r\n        cards: [],\r\n        shift: null,\r\n      },\r\n      red: {\r\n        cards: [],\r\n        shift: null,\r\n      },\r\n      green: {\r\n        cards: [],\r\n        shift: null,\r\n      },\r\n      purple: {\r\n        cards: [],\r\n        shift: null,\r\n      },\r\n      yellow: {\r\n        cards: [],\r\n        shift: null,\r\n      },\r\n    };\r\n\r\n    // Resources\r\n    this.tree = 0;\r\n    this.tower = 0;\r\n    this.crown = 0;\r\n    this.bulb = 0;\r\n    this.factory = 0;\r\n    this.clock = 0;\r\n\r\n    // player leadership and influence objects\r\n    // TODO LATER\r\n    this.ownedLeadership = {\r\n      domElement: null, // TODO remove\r\n      cardsArray: [],\r\n    };\r\n    // TODO LATER\r\n    this.influence = {\r\n      domElement: null, // TODO remove\r\n      cardsArray: [],\r\n    };\r\n  }\r\n\r\n  // calculate current recourses\r\n  calculateResources() {\r\n    this.tree = 0;\r\n    this.tower = 0;\r\n    this.crown = 0;\r\n    this.bulb = 0;\r\n    this.factory = 0;\r\n    this.clock = 0;\r\n    Object.keys(this.activeStacks).forEach((stack) => {\r\n      const currentStack = this.activeStacks[stack];\r\n      if (currentStack.cards.length > 0) {\r\n        const highestCard = currentStack.cards[currentStack.cards.length - 1];\r\n        highestCard.resourses.forEach((e) => {\r\n          this[e.resourceName] += 1;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // calculate and set current age, iterates througth each stack\r\n  //! Runs from Game each time when card taken\r\n  setCurrentAge() {\r\n    Object.keys(this.activeStacks).forEach((stack) => {\r\n      this.activeStacks[stack].cards.forEach((card) => {\r\n        if (+card.age > this.currentAge) {\r\n          this.currentAge = +card.age;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // render last taken card in hand of current player\r\n  renderLastTakenCard() {\r\n    const lastTakenCard = this.hand[this.hand.length - 1];\r\n    const cardElement = getCard.frontSide(lastTakenCard);\r\n\r\n    // add animation when card render to hand\r\n    cardElement.setAttribute('xyz', 'fade right-3 flip-right rotate-left');\r\n    cardElement.classList.add('xyz-in');\r\n\r\n    cardElement.onclick = () => { this.playCard(lastTakenCard, cardElement); };\r\n    this.gameUI.hand.append(cardElement);\r\n\r\n    // remove animation when card rendered\r\n    setTimeout(() => {\r\n      cardElement.removeAttribute('xyz');\r\n      cardElement.classList.remove('xyz-in');\r\n    }, 450);\r\n  }\r\n\r\n  // render all cards in hand of current player\r\n  renderHand() {\r\n    this.gameUI.hand.innerHTML = ''; // clear previous rendered hand\r\n\r\n    this.hand.forEach((card) => {\r\n      const cardElement = getCard.frontSide(card);\r\n      cardElement.onclick = () => {\r\n        this.playCard(card, cardElement);\r\n      };\r\n      this.gameUI.hand.append(cardElement);\r\n    });\r\n  }\r\n\r\n  // render all cards in active zone of current player\r\n  renderActiveZone() {\r\n    Object.keys(this.activeStacks).forEach((stackName) => {\r\n      this.gameUI.activeStacks[stackName].innerHTML = ''; // clear previous rendered active zone\r\n      this.activeStacks[stackName].cards.forEach((card) => {\r\n        this.gameUI.activeStacks[stackName].append(getCard.frontSide(card));\r\n      });\r\n    });\r\n  }\r\n\r\n  // on click event for cards in hand. Play card in stack depends on category\r\n  // TODO: later this method should add dogma function to each played card\r\n  playCard(cardObj, cardElement) {\r\n    Object.keys(this.activeStacks).forEach((stackName) => {\r\n      if (stackName === cardObj.color) {\r\n        this.hand.forEach((e, i) => {\r\n          if (e === cardObj) {\r\n            this.hand.splice(i, 1);\r\n          }\r\n        });\r\n        this.activeStacks[stackName].cards.push(cardObj);\r\n        this.gameUI.activeStacks[stackName].append(cardElement);\r\n      }\r\n    });\r\n    this.calculateResources();\r\n    header.changePlayerStats(this);\r\n    this.game.actionDone();\r\n  }\r\n}\r\n","/*\r\n* all game action happens here\r\n* take gameUI obj which contains all dom elements\r\n* take gameField obj which contains all cards avaiable for all players (ages/leadership/special)\r\n* take players objects which contains all cards avaible for players (hand/table/lead/influence)\r\n* count avaible actions per turn, reduce on each action\r\n* when avaible ections ends - turn passed to next player\r\n*/\r\nimport header from '../display/playerTable/displayHeader';\r\nimport displayNewTurnModal from '../display/displayNewTurnModal';\r\nimport displayNextTurnBtn from '../display/displayNextTurnBtn';\r\n\r\nexport default class Game {\r\n  constructor(gameUI, gameField, players) {\r\n    // store passed objects\r\n    this.players = players;\r\n    this.gameField = gameField;\r\n    this.gameUI = gameUI;\r\n\r\n    // initialize game field in players objects\r\n    this.players.forEach((player) => {\r\n      player.game = this;\r\n    });\r\n\r\n    // set default values\r\n    this.currentPlayer = null;\r\n    this.currentDeck = {\r\n      domElement: gameUI.ageDecks.age1,\r\n      cardsArray: gameField.ageDecks.age1,\r\n    };\r\n    this.turnPoints = 0;\r\n  }\r\n\r\n  newTurn() {\r\n    this.setCurrentPlayer();\r\n    displayNewTurnModal(this.currentPlayer.name);\r\n    this.turnPoints = 2;\r\n    // timeout to display modal\r\n    setTimeout(() => {\r\n      this.removeActiveDeck();\r\n      this.setActiveDeck(this.currentPlayer);\r\n      this.currentPlayer.renderHand();\r\n      this.currentPlayer.renderActiveZone();\r\n      this.updateInfoTable();\r\n    }, 450);\r\n  }\r\n\r\n  // use this after each action\r\n  actionDone() {\r\n    this.turnPoints -= 1;\r\n    this.updateInfoTable();\r\n    this.removeActiveDeck();\r\n    if (this.turnPoints > 0) {\r\n      this.setActiveDeck(this.currentPlayer);\r\n    } else {\r\n      this.disableHandEvents();\r\n      displayNextTurnBtn(this.newTurn.bind(this));\r\n    }\r\n  }\r\n\r\n  // set current players depends on previous player\r\n  setCurrentPlayer() {\r\n    if (this.currentPlayer === null) {\r\n      this.currentPlayer = this.players[0];\r\n    } else {\r\n      for (let i = 0; i < this.players.length; i += 1) {\r\n        if (this.currentPlayer === this.players[i]) {\r\n          i += 1;\r\n          if (i === this.players.length) i = 0;\r\n          this.currentPlayer = this.players[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // set active deck for current player\r\n  setActiveDeck(currentPlayer) {\r\n    Object.keys(this.gameField.ageDecks).forEach((ageDeckKey) => {\r\n      if (ageDeckKey === `age${currentPlayer.currentAge}`) {\r\n        // store active deck dom element\r\n        this.currentDeck.domElement = this.gameUI.ageDecks[`age${currentPlayer.currentAge}`];\r\n        // store active deck cards array\r\n        this.currentDeck.cardsArray = this.gameField.ageDecks[ageDeckKey];\r\n        //! Change current players currentAge if needed deck empty to go for the next deck\r\n        //! Need recalcualte current age after each action, done by players method setCurrentAge\r\n        if (this.currentDeck.cardsArray.length === 0) {\r\n          this.currentPlayer.currentAge += 1;\r\n        }\r\n      }\r\n    });\r\n    // set style and event listener of active deck when all calculations finished\r\n    this.currentDeck.domElement.classList.add('age-deck--active');\r\n    //! USED onclick because got bug with AddEvenListener - cant remove listener\r\n    this.currentDeck.domElement.onclick = this.takeCard.bind(this);\r\n\r\n    // update current active deck displayed in aside\r\n    this.updateCurrentDeckBlock();\r\n  }\r\n\r\n  // remove active deck class and eventlistener\r\n  //! should use before each setActiveDeck method\r\n  removeActiveDeck() {\r\n    const cloneCurrentDeck = document.querySelector('#cloneCurrentDeck');\r\n    if (cloneCurrentDeck !== null) cloneCurrentDeck.onclick = '';\r\n\r\n    this.currentDeck.domElement.classList.remove('age-deck--active');\r\n    this.currentDeck.domElement.onclick = '';\r\n  }\r\n\r\n  disableHandEvents() {\r\n    const cards = Array.from(document.querySelectorAll('.card'));\r\n    cards.forEach((card) => {\r\n      card.onclick = '';\r\n    });\r\n  }\r\n\r\n  // get card and render it in hand\r\n  takeCard() {\r\n    this.currentPlayer.setCurrentAge(); // recalculate current age of player\r\n    this.currentPlayer.hand.push(this.currentDeck.cardsArray.pop());\r\n    this.currentPlayer.renderLastTakenCard();\r\n    header.changePlayerStats(this.currentPlayer);\r\n    // starts next phase of turn\r\n    this.actionDone();\r\n  }\r\n\r\n  // update info table in aside, use after each action done in newTurn method\r\n  updateInfoTable() {\r\n    this.gameUI.infoTable.name.innerText = this.currentPlayer.name;\r\n    this.gameUI.infoTable.actionPoints.innerText = this.turnPoints;\r\n  }\r\n\r\n  // update current active deck displayed in aside, use after each time when setActiveDeck run\r\n  updateCurrentDeckBlock() {\r\n    // remove previous active deck if exists\r\n    const prevDeckClone = document.querySelector('#cloneCurrentDeck');\r\n    if (prevDeckClone !== null) prevDeckClone.remove();\r\n\r\n    // clone current active deck\r\n    const cloneCurrentDeck = this.currentDeck.domElement.cloneNode();\r\n    cloneCurrentDeck.innerText = this.currentDeck.domElement.innerText;\r\n    cloneCurrentDeck.id = 'cloneCurrentDeck';\r\n    cloneCurrentDeck.onclick = this.takeCard.bind(this);\r\n\r\n    // remove animation on each update of aside current deck\r\n    cloneCurrentDeck.classList.remove('xyz-in');\r\n\r\n    // display cloned deck in currentDeck block\r\n    this.gameUI.currentDeck.append(cloneCurrentDeck);\r\n  }\r\n}\r\n","export default function displayModal(playerName) {\r\n  const modalBg = document.createElement('div');\r\n  modalBg.classList.add('modal');\r\n  modalBg.classList.add('modal--hidden');\r\n\r\n  const modalBlock = document.createElement('div');\r\n  modalBlock.classList.add('modal__block');\r\n\r\n  const modalText = document.createElement('div');\r\n  modalText.classList.add('modal__text');\r\n  modalText.innerText = `Сейчас ход игрока ${playerName}`;\r\n\r\n  const modalBtn = document.createElement('button');\r\n  modalBtn.classList.add('modal__btn');\r\n  modalBtn.innerText = 'Начать ход!';\r\n  modalBtn.addEventListener('click', () => {\r\n    modalBg.style = '';\r\n    modalBg.classList.toggle('modal--hidden');\r\n    setTimeout(() => {\r\n      modalBg.remove();\r\n    }, 500);\r\n  });\r\n\r\n  modalBlock.append(modalText, modalBtn);\r\n  modalBg.append(modalBlock);\r\n\r\n  document.body.prepend(modalBg);\r\n  setTimeout(() => {\r\n    modalBg.classList.toggle('modal--hidden');\r\n  }, 0);\r\n}\r\n","export default function displayNextTurnBtn(newTurnFunction) {\r\n  const nextTurnBtn = document.createElement('div');\r\n  nextTurnBtn.classList.add('info-table__next-turn-btn');\r\n  nextTurnBtn.innerText = 'Закончить ход';\r\n  nextTurnBtn.addEventListener('click', () => {\r\n    newTurnFunction();\r\n    setTimeout(() => {\r\n      const excistedNextTurnBtn = document.querySelector('.info-table__next-turn-btn');\r\n      excistedNextTurnBtn.remove();\r\n    }, 500);\r\n  });\r\n  const infoTable = document.querySelector('.info-table');\r\n  infoTable.append(nextTurnBtn);\r\n}\r\n","// get JSON and return array of card objects\r\nexport default function parseCards(cardsJSON) {\r\n  const resultArr = [];\r\n\r\n  cardsJSON.forEach((setOfCards) => {\r\n    setOfCards.cards.forEach((card) => {\r\n      const cardObject = {};\r\n      Object.assign(cardObject, setOfCards, card);\r\n      delete cardObject.cards; // remove duplicated field\r\n      resultArr.push(cardObject);\r\n    });\r\n  });\r\n\r\n  return resultArr;\r\n}\r\n","/*\n* store all game UI dom elements\n* this obj passed as argument to Game constructor\n*/\nexport default class GameUI {\n  constructor() {\n    this.ageDecks = {};\n    this.getAgeDecks();\n\n    this.activeStacks = {};\n    this.getActiveStacks();\n\n    this.infoTable = {};\n    this.getInfoTable();\n\n    this.currentDeck = document.querySelector('.current-deck__cards');\n    this.hand = document.querySelector('.hand__cards');\n  }\n\n  getAgeDecks() {\n    const ageDecksElements = Array.from(document.getElementsByClassName('age-deck'));\n    ageDecksElements.forEach((ageDeck, i) => {\n      this.ageDecks[`age${i + 1}`] = ageDecksElements[i];\n    });\n  }\n\n  getActiveStacks() {\n    const activeStacksElements = Array.from(document.getElementsByClassName('active-zone__stack'));\n    activeStacksElements.forEach((activeStack) => {\n      this.activeStacks[activeStack.id] = activeStack;\n    });\n  }\n\n  getInfoTable() {\n    const currentPlayerNameBlock = document.querySelector('.info-table__player-name');\n    this.infoTable.name = currentPlayerNameBlock;\n    const currentPlayerActionPoints = document.querySelector('.info-table__action-points');\n    this.infoTable.actionPoints = currentPlayerActionPoints;\n  }\n}\n","export default function setChat() {\r\n  // eslint-disable-next-line no-undef\r\n  const socket = io();\r\n\r\n  const messageContainer = document.querySelector('.chat-block');\r\n  const messageForm = document.querySelector('.chat-log__form');\r\n  const messageInput = document.querySelector('.chat-log__input');\r\n  const players = document.querySelectorAll('.head-row__name');\r\n\r\n  const userName = prompt('What is your name?');\r\n\r\n  function appendMessage(message) {\r\n    const messageElement = document.createElement('div');\r\n    messageElement.innerText = message;\r\n    messageContainer.append(messageElement);\r\n  }\r\n\r\n  function autoScroll() {\r\n    messageContainer.scrollTop = messageContainer.scrollHeight;\r\n  }\r\n\r\n  appendMessage('You joined');\r\n  socket.emit('new-user', userName);\r\n\r\n  socket.on('chat-message', (data) => {\r\n    appendMessage(`${data.name}: ${data.message}`);\r\n    autoScroll();\r\n  });\r\n\r\n  socket.on('user-connected', (name) => {\r\n    appendMessage(`${name} connected`);\r\n  });\r\n\r\n  socket.on('players', (name) => {\r\n    const nameOfUsers = Object.values(name);\r\n    players.forEach((el, i) => {\r\n      el.textContent = nameOfUsers[i];\r\n    });\r\n  });\r\n\r\n  socket.on('user-disconnected', (name) => {\r\n    appendMessage(`${name} disconnected`);\r\n  });\r\n\r\n  messageForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    if (messageInput.value === '') return;\r\n    const message = messageInput.value;\r\n    appendMessage(`You: ${message}`);\r\n    socket.emit('send-chat-message', message);\r\n    autoScroll();\r\n    messageInput.value = '';\r\n  });\r\n}\r\n","export default function shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i -= 1) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n","import GameField from '../components/GameField';\r\nimport Player from '../components/Player';\r\nimport Game from '../components/Game';\r\nimport cardsJSON from '../cards/cards.json';\r\nimport parseCards from '../cards/parseCards';\r\nimport GameUI from '../components/GameUI';\r\nimport setChat from './setChat';\r\nimport shuffle from './shuffle';\r\n\r\nexport default function initHotSeatGame() {\r\n  // contains dom elements\r\n  const gameUI = new GameUI();\r\n\r\n  // contains sorted card objects\r\n  const arrOfCards = parseCards(cardsJSON);\r\n\r\n  // shuffle arr of cards objects\r\n  shuffle(arrOfCards);\r\n\r\n  // create gameField which contains all cards avaiable for players\r\n  const gameField = new GameField(arrOfCards);\r\n\r\n  // contains players properties and cards\r\n  const players = [];\r\n  for (let i = 0; i < arguments.length; i += 1) {\r\n    const player = new Player(gameUI, arguments[i], i + 1);\r\n    players.push(player);\r\n  }\r\n\r\n  // work with all main objects\r\n  const game = new Game(gameUI, gameField, players);\r\n  game.newTurn();\r\n  // display first modal without animation\r\n  document.querySelector('.modal').style.opacity = '1';\r\n\r\n  // init chat\r\n  setChat();\r\n}\r\n","// import styles\r\nimport '../scss/style.scss';\r\nimport '@animxyz/core';\r\n\r\n// import js modules\r\nimport displayPlayerTable from './display/playerTable/displayPlayerTable';\r\nimport setHandControls from './utility/setHandControls';\r\nimport setAsideControls from './utility/setAsideControls';\r\nimport intro from './components/Intro';\r\n\r\n// display intro & menu\r\n// intro.init();\r\n\r\n// display game UI\r\ndocument.body.prepend(displayPlayerTable.init());\r\n\r\n// add event listeners to hand controls\r\nsetHandControls();\r\n\r\n// add event listeners and animations to aside buttons\r\nsetAsideControls();\r\n\r\n//! Added for testing! Uncomment next 2 lines and comment line 12 with Intro.init()\r\nimport initHotSeatGame from './utility/initHotSeatGame';\r\ninitHotSeatGame('Player1', 'Player2');\r\n","export default function setAsideControls() {\n  const buttons = Array.from(document.querySelectorAll('.close-modal-btn'));\n\n  function animation(e) {\n    const button = e.target;\n    const parentBlock = e.target.parentElement.parentElement;\n    const childLines = Array.from(parentBlock.children);\n    const childBlocks = childLines.map((line) => Array.from(line.children)).flat();\n\n    button.removeEventListener('click', animation);\n    parentBlock.classList.remove('xyz-in');\n    parentBlock.classList.add('xyz-out');\n\n    childBlocks.forEach((child) => {\n      child.classList.remove('xyz-in');\n      child.classList.add('xyz-out');\n    });\n\n    setTimeout(() => {\n      parentBlock.classList.toggle(`${parentBlock.className.split(' ')[0]}--hidden`);\n      childBlocks.forEach((child) => {\n        child.classList.remove('xyz-out');\n        child.classList.add('xyz-in');\n        parentBlock.classList.remove('xyz-out');\n        parentBlock.classList.add('xyz-in');\n      });\n      button.addEventListener('click', animation);\n    }, 600);\n  }\n\n  buttons.forEach((button) => {\n    button.addEventListener('click', animation);\n  });\n}\n"],"sourceRoot":""}